{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red21\green21\blue21;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c10588\c10588\c10588;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh16380\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs31\fsmilli15660 \cf2 \cb3 \expnd0\expndtw0\kerning0
// API/TMDBApi.js\
\
// API/TMDBApi.js\
const API_TOKEN = "4bff00d926ad7b0476a0e796e59b065f";\
export function getFilmsFromApiWithSearchedText (text, page) \{\
    const url = 'https://api.themoviedb.org/3/search/movie?api_key='0e62b9d91d96234ea0202ae50dd4db0e'&language=fr&query='star'\
    return fetch(url)\
      .then((response) => response.json())\
      .catch((error) => console.error(error))\
\
  \}\
  // API/TMDBApi.js\
\
export function getImageFromApi (name) \{\
    return 'https://image.tmdb.org/t/p/w300' + name\
  \}\
  \
\
**************\
\
\
// App.js\
\
import React from 'react';\
import Search from './Components/Search';\
\
\
export default function App() \{\
  return (\
  <Search/>\
  );\
\}\
\
\
\
\
\
\
\
**************************\
\
\
\
// Components/Search.js\
\
import React from 'react'\
import \{ StyleSheet, View, TextInput, Button, Text, FlatList, ActivityIndicator \} from 'react-native'\
import FilmItem from './FilmItem'\
import \{ getFilmsFromApiWithSearchedText \} from '../API/TMDBApi'\
\
class Search extends React.Component \{\
\
  constructor(props) \{\
    super(props)\
    this.searchedText = ""\
    this.page = 0\
    this.totalPages = 0\
    this.state = \{\
      films: [],\
      isLoading: false\
    \}\
  \}\
\
  _loadFilms() \{\
    if (this.searchedText.length > 0) \{\
      this.setState(\{ isLoading: true \})\
      getFilmsFromApiWithSearchedText(this.searchedText, this.page+1).then(data => \{\
          this.page = data.page\
          this.totalPages = data.total_pages\
          this.setState(\{\
            films: [ ...this.state.films, ...data.results ],\
            isLoading: false\
          \})\
      \})\
    \}\
  \}\
\
  _searchTextInputChanged(text) \{\
    this.searchedText = text \
  \}\
\
  _searchFilms() \{\
    this.page = 0\
    this.totalPages = 0\
    this.setState(\{\
      films: [],\
    \}, () => \{\
        this._loadFilms()\
    \})\
  \}\
\
  _displayLoading() \{\
    if (this.state.isLoading) \{\
      return (\
        <View style=\{styles.loading_container\}>\
          <ActivityIndicator size='large' />\
        </View>\
      )\
    \}\
  \}\
\
  render() \{\
    return (\
      <View style=\{styles.main_container\}>\
        <TextInput\
          style=\{styles.textinput\}\
          placeholder='Titre du film'\
          onChangeText=\{(text) => this._searchTextInputChanged(text)\}\
          onSubmitEditing=\{() => this._searchFilms()\}\
        />\
        <Button title='Rechercher' onPress=\{() => this._searchFilms()\}/>\
        <FlatList\
          data=\{this.state.films\}\
          keyExtractor=\{(item) => item.id.toString()\}\
          renderItem=\{(\{item\}) => <FilmItem film=\{item\}/>\}\
          onEndReachedThreshold=\{0.5\}\
          onEndReached=\{() => \{\
              if (this.page < this.totalPages) \{\
                 this._loadFilms()\
              \}\
          \}\}\
        />\
        \{this._displayLoading()\}\
      </View>\
    )\
  \}\
\}\
\
const styles = StyleSheet.create(\{\
  main_container: \{\
    flex: 1,\
    marginTop: 20\
  \},\
  textinput: \{\
    marginLeft: 5,\
    marginRight: 5,\
    height: 50,\
    borderColor: '#000000',\
    borderWidth: 1,\
    paddingLeft: 5\
  \},\
  loading_container: \{\
    position: 'absolute',\
    left: 0,\
    right: 0,\
    top: 100,\
    bottom: 0,\
    alignItems: 'center',\
    justifyContent: 'center'\
  \}\
\})\
\
export default Search\
\
\
\
***********************\
// Components/FilmItem.js\
\
import React from 'react'\
import \{ StyleSheet, View, Text, Image \} from 'react-native'\
import \{ getImageFromApi \} from '../API/TMDBApi'\
\
class FilmItem extends React.Component \{\
  // Components/FilmItem.js\
\
render() \{\
    const film = this.props.film\
    return (\
      <View style=\{styles.main_container\}>\
        <Image\
  style=\{styles.image\}\
  source=\{\{uri: getImageFromApi(film.poster_path)\}\}\
/>\
        <View style=\{styles.content_container\}>\
          <View style=\{styles.header_container\}>\
            <Text style=\{styles.title_text\}>\{film.title\}</Text>\
            <Text style=\{styles.vote_text\}>\{film.vote_average\}</Text>\
          </View>\
          <View style=\{styles.description_container\}>\
            <Text style=\{styles.description_text\} numberOfLines=\{6\}>\{film.overview\}</Text>\
          </View>\
          <View style=\{styles.date_container\}>\
            <Text style=\{styles.date_text\}>Sorti le \{film.release_date\}</Text>\
          </View>\
        </View>\
      </View>\
    )\
\}\
\}\
\
const styles = StyleSheet.create(\{\
  main_container: \{\
    height: 190,\
    flexDirection: 'row'\
  \},\
  image: \{\
    width: 120,\
    height: 180,\
    margin: 5,\
    backgroundColor: 'gray'\
  \},\
  content_container: \{\
    flex: 1,\
    margin: 5\
  \},\
  header_container: \{\
    flex: 3,\
    flexDirection: 'row'\
  \},\
  title_text: \{\
    fontWeight: 'bold',\
    fontSize: 20,\
    flex: 1,\
    flexWrap: 'wrap',\
    paddingRight: 5\
  \},\
  vote_text: \{\
    fontWeight: 'bold',\
    fontSize: 26,\
    color: '#666666'\
  \},\
  description_container: \{\
    flex: 7\
  \},\
  description_text: \{\
    fontStyle: 'italic',\
    color: '#666666'\
  \},\
  date_container: \{\
    flex: 1\
  \},\
  date_text: \{\
    textAlign: 'right',\
    fontSize: 14\
  \}\
\})\
\
export default FilmItem}